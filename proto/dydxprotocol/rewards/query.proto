syntax = "proto3";
package dydxprotocol.rewards;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "dydxprotocol/rewards/params.proto";
import "dydxprotocol/rewards/reward_share.proto";

option go_package = "github.com/dydxprotocol/v4-chain/protocol/x/rewards/types";

// Query defines the gRPC querier service.
service Query {
  // Queries the Params.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/dydxprotocol/v4/rewards/params";
  }

  // Queries a reward share by address.
  rpc RewardShare(QueryRewardShareRequest) returns (QueryRewardShareResponse) {
    option (google.api.http).get = "/dydxprotocol/v4/rewards/shares/{address}";
  }
}

// QueryParamsRequest is a request type for the Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is a response type for the Params RPC method.
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryRewardShareRequest is a request type for the RewardShare RPC method.
message QueryRewardShareRequest {
  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// QueryRewardShareResponse is a response type for the RewardsShare RPC method.
message QueryRewardShareResponse {
  RewardShare reward_share = 1 [ (gogoproto.nullable) = false ];
}
